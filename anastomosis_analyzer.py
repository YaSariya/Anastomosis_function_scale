#!/usr/bin/env python
# coding: utf-8

# In[ ]:


import streamlit as st
import math

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
rho = 1060  # –ü–ª–æ—Ç–Ω–æ—Å—Ç—å –∫—Ä–æ–≤–∏ –∫–≥/–º¬≥
mu = 0.0035  # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –≤—è–∑–∫–æ—Å—Ç—å –∫—Ä–æ–≤–∏ –ü–∞¬∑—Å

def calculate_reynolds(diameter, velocity):
    """–†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —á–∏—Å–ª–æ –†–µ–π–Ω–æ–ª—å–¥—Å–∞"""
    if diameter == 0:
        return 0
    return (rho * velocity * diameter) / mu

def classify_flow(re):
    """–ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç —Ç–∏–ø –ø–æ—Ç–æ–∫–∞ –ø–æ —á–∏—Å–ª—É –†–µ–π–Ω–æ–ª—å–¥—Å–∞"""
    if re < 2000:
        return "–õ–∞–º–∏–Ω–∞—Ä–Ω—ã–π", "üü¢"
    elif re < 4000:
        return "–ü–µ—Ä–µ—Ö–æ–¥–Ω—ã–π", "üü°"
    else:
        return "–¢—É—Ä–±—É–ª–µ–Ω—Ç–Ω—ã–π", "üî¥"

def calculate_wall_shear_stress(diameter, velocity):
    """–†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ —Å–¥–≤–∏–≥–∞ –Ω–∞ —Å—Ç–µ–Ω–∫–µ —Å–æ—Å—É–¥–∞"""
    if diameter == 0:
        return 0
    return (8 * mu * velocity) / diameter

def main():
    st.set_page_config(page_title="–ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∞–Ω–∞—Å—Ç–æ–º–æ–∑–∞", layout="wide")
    st.title("üß† –ì–µ–º–æ–¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∞–Ω–∞—Å—Ç–æ–º–æ–∑–∞")
    st.write("–ò—Å—Å–ª–µ–¥—É–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ—Ç–æ–∫–∞ –≤ —Å–æ—Å—É–¥–∏—Å—Ç–æ–º –∞–Ω–∞—Å—Ç–æ–º–æ–∑–µ")
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –≤–≤–æ–¥–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.header("–î–æ–Ω–æ—Ä—Å–∫–∞—è –∞—Ä—Ç–µ—Ä–∏—è")
        d_donor = st.number_input("–î–∏–∞–º–µ—Ç—Ä (–º–º)", min_value=0.1, max_value=5.0, value=1.2, key="d_donor")
        v_donor = st.number_input("–°–∫–æ—Ä–æ—Å—Ç—å (—Å–º/—Å)", min_value=1.0, max_value=100.0, value=8.0, key="v_donor")
        p_donor = st.number_input("–î–∞–≤–ª–µ–Ω–∏–µ (–º–º —Ä—Ç.—Å—Ç.)", min_value=10.0, max_value=200.0, value=80.0, key="p_donor")
    
    with col2:
        st.header("–ê–∫—Ü–µ–ø—Ç–æ—Ä–Ω–∞—è –∞—Ä—Ç–µ—Ä–∏—è")
        d_acceptor = st.number_input("–î–∏–∞–º–µ—Ç—Ä (–º–º)", min_value=0.1, max_value=5.0, value=1.0, key="d_acceptor")
        v_acceptor = st.number_input("–°–∫–æ—Ä–æ—Å—Ç—å (—Å–º/—Å)", min_value=1.0, max_value=100.0, value=10.0, key="v_acceptor")
        p_acceptor = st.number_input("–î–∞–≤–ª–µ–Ω–∏–µ (–º–º —Ä—Ç.—Å—Ç.)", min_value=10.0, max_value=200.0, value=75.0, key="p_acceptor")
    
    with col3:
        st.header("–û—Ç–≤–æ–¥—è—â–∞—è –∞—Ä—Ç–µ—Ä–∏—è")
        d_out = st.number_input("–î–∏–∞–º–µ—Ç—Ä (–º–º)", min_value=0.1, max_value=5.0, value=1.2, key="d_out")
        v_out = st.number_input("–°–∫–æ—Ä–æ—Å—Ç—å (—Å–º/—Å)", min_value=1.0, max_value=100.0, value=15.0, key="v_out")
        p_out = st.number_input("–î–∞–≤–ª–µ–Ω–∏–µ (–º–º —Ä—Ç.—Å—Ç.)", min_value=10.0, max_value=200.0, value=78.0, key="p_out")
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –µ–¥–∏–Ω–∏—Ü
    d_donor_m = d_donor * 0.001
    d_acceptor_m = d_acceptor * 0.001
    d_out_m = d_out * 0.001
    
    v_donor_ms = v_donor * 0.01
    v_acceptor_ms = v_acceptor * 0.01
    v_out_ms = v_out * 0.01
    
    # –†–∞—Å—á–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    re_donor = calculate_reynolds(d_donor_m, v_donor_ms)
    re_acceptor = calculate_reynolds(d_acceptor_m, v_acceptor_ms)
    re_out = calculate_reynolds(d_out_m, v_out_ms)
    
    flow_donor, emoji_donor = classify_flow(re_donor)
    flow_acceptor, emoji_acceptor = classify_flow(re_acceptor)
    flow_out, emoji_out = classify_flow(re_out)
    
    # –†–∞—Å—á–µ—Ç –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–π —Å–¥–≤–∏–≥–∞
    tau_donor = calculate_wall_shear_stress(d_donor_m, v_donor_ms)
    tau_acceptor = calculate_wall_shear_stress(d_acceptor_m, v_acceptor_ms)
    tau_out = calculate_wall_shear_stress(d_out_m, v_out_ms)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –ø–æ—Ç–æ–∫–æ–≤
    q_donor = v_donor_ms * (math.pi * (d_donor_m/2)**2)
    q_acceptor = v_acceptor_ms * (math.pi * (d_acceptor_m/2)**2)
    q_out = v_out_ms * (math.pi * (d_out_m/2)**2)
    
    flow_balance_error = abs((q_donor + q_acceptor) - q_out) / q_out * 100 if q_out > 0 else 100
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –¥–∞–≤–ª–µ–Ω–∏–π
    pressure_diff = abs(p_donor - p_acceptor)
    
    # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    st.markdown("---")
    st.header("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞")
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ –≤–∏–¥–µ –º–µ—Ç—Ä–∏–∫
    col4, col5, col6 = st.columns(3)
    
    with col4:
        st.subheader("–î–æ–Ω–æ—Ä—Å–∫–∞—è –∞—Ä—Ç–µ—Ä–∏—è")
        st.metric("–¢–∏–ø –ø–æ—Ç–æ–∫–∞", f"{emoji_donor} {flow_donor}")
        st.metric("–ß–∏—Å–ª–æ –†–µ–π–Ω–æ–ª—å–¥—Å–∞", f"{re_donor:.0f}")
        st.metric("–ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ —Å–¥–≤–∏–≥–∞", f"{tau_donor:.2f} –ü–∞")
        st.metric("–û–±—ä–µ–º–Ω—ã–π —Ä–∞—Å—Ö–æ–¥", f"{q_donor*1e6:.2f} –º–ª/—Å")
    
    with col5:
        st.subheader("–ê–∫—Ü–µ–ø—Ç–æ—Ä–Ω–∞—è –∞—Ä—Ç–µ—Ä–∏—è")
        st.metric("–¢–∏–ø –ø–æ—Ç–æ–∫–∞", f"{emoji_acceptor} {flow_acceptor}")
        st.metric("–ß–∏—Å–ª–æ –†–µ–π–Ω–æ–ª—å–¥—Å–∞", f"{re_acceptor:.0f}")
        st.metric("–ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ —Å–¥–≤–∏–≥–∞", f"{tau_acceptor:.2f} –ü–∞")
        st.metric("–û–±—ä–µ–º–Ω—ã–π —Ä–∞—Å—Ö–æ–¥", f"{q_acceptor*1e6:.2f} –º–ª/—Å")
    
    with col6:
        st.subheader("–û—Ç–≤–æ–¥—è—â–∞—è –∞—Ä—Ç–µ—Ä–∏—è")
        st.metric("–¢–∏–ø –ø–æ—Ç–æ–∫–∞", f"{emoji_out} {flow_out}")
        st.metric("–ß–∏—Å–ª–æ –†–µ–π–Ω–æ–ª—å–¥—Å–∞", f"{re_out:.0f}")
        st.metric("–ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ —Å–¥–≤–∏–≥–∞", f"{tau_out:.2f} –ü–∞")
        st.metric("–û–±—ä–µ–º–Ω—ã–π —Ä–∞—Å—Ö–æ–¥", f"{q_out*1e6:.2f} –º–ª/—Å")
    
    # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Å –ø–æ–º–æ—â—å—é progress bars
    st.subheader("–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤")
    
    st.write("**–ß–∏—Å–ª–∞ –†–µ–π–Ω–æ–ª—å–¥—Å–∞:**")
    st.progress(min(re_donor / 5000, 1.0), text=f"–î–æ–Ω–æ—Ä—Å–∫–∞—è: {re_donor:.0f}")
    st.progress(min(re_acceptor / 5000, 1.0), text=f"–ê–∫—Ü–µ–ø—Ç–æ—Ä–Ω–∞—è: {re_acceptor:.0f}")
    st.progress(min(re_out / 5000, 1.0), text=f"–û—Ç–≤–æ–¥—è—â–∞—è: {re_out:.0f}")
    
    st.write("**–ù–∞–ø—Ä—è–∂–µ–Ω–∏—è —Å–¥–≤–∏–≥–∞ (–ü–∞):**")
    st.progress(min(tau_donor / 5, 1.0), text=f"–î–æ–Ω–æ—Ä—Å–∫–∞—è: {tau_donor:.2f} –ü–∞")
    st.progress(min(tau_acceptor / 5, 1.0), text=f"–ê–∫—Ü–µ–ø—Ç–æ—Ä–Ω–∞—è: {tau_acceptor:.2f} –ü–∞")
    st.progress(min(tau_out / 5, 1.0), text=f"–û—Ç–≤–æ–¥—è—â–∞—è: {tau_out:.2f} –ü–∞")
    
    # –û—Ü–µ–Ω–∫–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
    st.subheader("üìà –û—Ü–µ–Ω–∫–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ –∞–Ω–∞—Å—Ç–æ–º–æ–∑–∞")
    
    stability_score = 0
    feedback = []
    
    # –ö—Ä–∏—Ç–µ—Ä–∏–π 1: –¢–∏–ø –ø–æ—Ç–æ–∫–∞
    if all(re < 2000 for re in [re_donor, re_acceptor, re_out]):
        stability_score += 2
        feedback.append("‚úÖ –í—Å–µ –ø–æ—Ç–æ–∫–∏ –ª–∞–º–∏–Ω–∞—Ä–Ω—ã–µ")
    elif all(re < 4000 for re in [re_donor, re_acceptor, re_out]):
        stability_score += 1
        feedback.append("‚ö†Ô∏è –ü–æ—Ç–æ–∫–∏ –≤ –ø–µ—Ä–µ—Ö–æ–¥–Ω–æ–π –∑–æ–Ω–µ")
    else:
        feedback.append("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Ç—É—Ä–±—É–ª–µ–Ω—Ç–Ω–æ—Å—Ç—å")
    
    # –ö—Ä–∏—Ç–µ—Ä–∏–π 2: –ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ —Å–¥–≤–∏–≥–∞
    if all(1.5 < tau < 2.5 for tau in [tau_donor, tau_acceptor, tau_out]):
        stability_score += 2
        feedback.append("‚úÖ –ù–∞–ø—Ä—è–∂–µ–Ω–∏—è —Å–¥–≤–∏–≥–∞ –≤ –Ω–æ—Ä–º–µ")
    elif all(0.5 < tau < 4.0 for tau in [tau_donor, tau_acceptor, tau_out]):
        stability_score += 1
        feedback.append("‚ö†Ô∏è –ù–∞–ø—Ä—è–∂–µ–Ω–∏—è —Å–¥–≤–∏–≥–∞ –±–ª–∏–∑–∫–∏ –∫ –≥—Ä–∞–Ω–∏—Ü–∞–º –Ω–æ—Ä–º—ã")
    else:
        feedback.append("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ —Å–¥–≤–∏–≥–∞")
    
    # –ö—Ä–∏—Ç–µ—Ä–∏–π 3: –ë–∞–ª–∞–Ω—Å –ø–æ—Ç–æ–∫–æ–≤
    if flow_balance_error < 5:
        stability_score += 1
        feedback.append("‚úÖ –û—Ç–ª–∏—á–Ω—ã–π –±–∞–ª–∞–Ω—Å –ø–æ—Ç–æ–∫–æ–≤")
    elif flow_balance_error < 10:
        stability_score += 1
        feedback.append("‚ö†Ô∏è –£–º–µ—Ä–µ–Ω–Ω—ã–π –¥–∏—Å–±–∞–ª–∞–Ω—Å –ø–æ—Ç–æ–∫–æ–≤")
    else:
        feedback.append("‚ùå –ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–π –¥–∏—Å–±–∞–ª–∞–Ω—Å –ø–æ—Ç–æ–∫–æ–≤")
    
    # –ö—Ä–∏—Ç–µ—Ä–∏–π 4: –ë–∞–ª–∞–Ω—Å –¥–∞–≤–ª–µ–Ω–∏–π
    if pressure_diff < 5:
        stability_score += 1
        feedback.append("‚úÖ –ò–¥–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –¥–∞–≤–ª–µ–Ω–∏–π")
    elif pressure_diff < 10:
        stability_score += 1
        feedback.append("‚ö†Ô∏è –£–º–µ—Ä–µ–Ω–Ω–∞—è —Ä–∞–∑–Ω–∏—Ü–∞ –¥–∞–≤–ª–µ–Ω–∏–π")
    else:
        feedback.append("‚ùå –ë–æ–ª—å—à–∞—è —Ä–∞–∑–Ω–∏—Ü–∞ –¥–∞–≤–ª–µ–Ω–∏–π")
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏
    col7, col8 = st.columns([1, 3])
    
    with col7:
        st.metric("–û—Ü–µ–Ω–∫–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏", f"{stability_score}/6")
        
        if stability_score >= 5:
            st.success("‚úÖ –ê–Ω–∞—Å—Ç–æ–º–æ–∑ —Å—Ç–∞–±–∏–ª–µ–Ω")
        elif stability_score >= 3:
            st.warning("‚ö†Ô∏è –ê–Ω–∞—Å—Ç–æ–º–æ–∑ —Ç—Ä–µ–±—É–µ—Ç –Ω–∞–±–ª—é–¥–µ–Ω–∏—è")
        else:
            st.error("‚ùå –í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –∞–Ω–∞—Å—Ç–æ–º–æ–∑–∞")
    
    with col8:
        st.write("**–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑:**")
        for item in feedback:
            st.write(item)
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    st.subheader("üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
    
    if any(re > 2000 for re in [re_donor, re_acceptor, re_out]):
        st.write("**–î–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ –ø–æ—Ç–æ–∫–∞:**")
        if re_donor > 2000:
            st.write("- –£–≤–µ–ª–∏—á—å—Ç–µ –¥–∏–∞–º–µ—Ç—Ä –¥–æ–Ω–æ—Ä—Å–∫–æ–π –∞—Ä—Ç–µ—Ä–∏–∏ –∏–ª–∏ —É–º–µ–Ω—å—à–∏—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å –ø–æ—Ç–æ–∫–∞")
        if re_acceptor > 2000:
            st.write("- –£–≤–µ–ª–∏—á—å—Ç–µ –¥–∏–∞–º–µ—Ç—Ä –∞–∫—Ü–µ–ø—Ç–æ—Ä–Ω–æ–π –∞—Ä—Ç–µ—Ä–∏–∏ –∏–ª–∏ —É–º–µ–Ω—å—à–∏—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å –ø–æ—Ç–æ–∫–∞")
        if re_out > 2000:
            st.write("- –£–≤–µ–ª–∏—á—å—Ç–µ –¥–∏–∞–º–µ—Ç—Ä –æ—Ç–≤–æ–¥—è—â–µ–π –∞—Ä—Ç–µ—Ä–∏–∏")
    
    if any(tau < 0.5 or tau > 4.0 for tau in [tau_donor, tau_acceptor, tau_out]):
        st.write("**–î–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è —Å–¥–≤–∏–≥–∞:**")
        if tau_donor < 0.5 or tau_acceptor < 0.5 or tau_out < 0.5:
            st.write("- –£–≤–µ–ª–∏—á—å—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å –ø–æ—Ç–æ–∫–∞ –≤ —Å–æ—Å—É–¥–∞—Ö —Å –Ω–∏–∑–∫–∏–º –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ–º —Å–¥–≤–∏–≥–∞")
        if tau_donor > 4.0 or tau_acceptor > 4.0 or tau_out > 4.0:
            st.write("- –£–º–µ–Ω—å—à–∏—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å –ø–æ—Ç–æ–∫–∞ –≤ —Å–æ—Å—É–¥–∞—Ö —Å –≤—ã—Å–æ–∫–∏–º –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ–º —Å–¥–≤–∏–≥–∞")
    
    if flow_balance_error > 10:
        st.write("- –°–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–π—Ç–µ –¥–∏–∞–º–µ—Ç—Ä—ã —Å–æ—Å—É–¥–æ–≤ –¥–ª—è —Å–æ–±–ª—é–¥–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ—Ç–æ–∫–æ–≤")
    
    if pressure_diff > 10:
        st.write("- –î–æ–±–µ–π—Ç–µ—Å—å –±–æ–ª—å—à–µ–≥–æ —Ä–∞–≤–µ–Ω—Å—Ç–≤–∞ –¥–∞–≤–ª–µ–Ω–∏–π –≤ –¥–æ–Ω–æ—Ä—Å–∫–æ–π –∏ –∞–∫—Ü–µ–ø—Ç–æ—Ä–Ω–æ–π –∞—Ä—Ç–µ—Ä–∏—è—Ö")

if __name__ == "__main__":
    main()


# In[ ]:




